{"pageProps":{"posts":[{"slug":"2023-06-09-api-server","frontmatter":{"title":"Building a Truly \"Open\" OpenAI API Server with Open Models Locally","author":"Shuo Yang and Siyuan Zhuang","date":"June 9, 2023","previewImg":"/images/blog/langchain/overview.png"},"content":"\r\n\r\nMany applications have been built on closed-source OpenAI APIs, but now you can effortlessly port them to use open-source alternatives without modifying the code. [FastChat](https://github.com/lm-sys/FastChat)'s OpenAI-compatible API server enables this seamless transition.\r\nIn this blog post, we show how you can do this and use LangChain as an [example](https://github.com/lm-sys/FastChat/blob/main/docs/langchain_integration.md).\r\n\r\n\r\n## **Demo: LangChain with Vicuna-13B**\r\n\r\nHere, we present two demos of using LangChain with [Vicuna-13B](http://ec2-52-40-36-154.us-west-2.compute.amazonaws.com:3000/blog/2023-03-30-vicuna/), a state-of-the-art open model.\r\n\r\n1. Question Answering over Docs  \r\n  Enliven your documents, and communicate with them through a single command line ([doc](https://python.langchain.com/en/latest/use_cases/question_answering.html)).\r\n\r\n<img src=\"/images/blog/langchain/qa_demo.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\n2. Code Understanding  \r\n  Clone the llama repository and then understand the llama repo with a single command line, bringing your code to life ([doc](https://python.langchain.com/en/latest/use_cases/code.html)).\r\n\r\n<img src=\"/images/blog/langchain/code_analysis.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\n\r\nThe demos above are implemented directly with default LangChain code.\r\nThey don't require you to adapt specifically for Vicuna. **Any** tool implemented with the OpenAI API can be seamlessly migrated to the open model through FastChat.\r\n\r\n\r\n## **Why Local API Server?**\r\n\r\n**Data Privacy**: When using FastChat's OpenAI-compatible API server and LangChain, all the data and interactions remain on your local machine. This means you have full control over your data, and it never leaves your local environment unless you decide to share it. This local setup ensures that sensitive data isn't exposed to third-party services, reducing the risk of data breaches and ensuring compliance with data privacy regulations.\r\n\r\n**Cost Saving**: Traditional cloud-based API services often charge based on the number of requests or the tokens used. These costs can add up quickly, especially for researchers, organizations and companies. By running models locally, you can fully harness the power of large AI models without the worry of accumulating costs from API.\r\n\r\n**Customizability**: With a local setup, you have the freedom to adapt the AI model to suit your specific needs. You can experiment with different parameters, settings, or even adjust the model architecture itself. More importantly, it allows you the opportunity to fine-tune the model for certain specific behaviors. This capability gives you control not only over how the model operates but also over the quality and relevance of the output.\r\n\r\n## **Local OpenAI API Server with FastChat**\r\n\r\nFastChat API Server can interface with apps based on the OpenAI API through the OpenAI API Protocol. This means that the open models can be used as a replacement without any need for code modification.\r\n\r\n\r\n<img src=\"/images/blog/langchain/overview.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\n\r\nHow to integrate a local model into FastChat API Server? All you need to do is give the model an OpenAI model name when launching it. See [LangChain Support](https://github.com/lm-sys/FastChat/blob/main/docs/langchain_integration.md) for details.\r\n\r\n<img src=\"/images/blog/langchain/launch_api.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\nThe API server is compatible with both curl and [OpenAI python package](https://github.com/openai/openai-python). It supports chat completions, completions, embeddings, and more.\r\n\r\n<img src=\"/images/blog/langchain/curl_request.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\n\r\n## **Comparing Vicuna-13B, MPT-Chat-7B, and OpenAI for using LangChain**\r\n\r\nWe have conducted some preliminary testing on the open models performing LangChain tasks. These initial tests are relatively simple, including text-based question answering tasks and salesman agent performance tasks.\r\n\r\n\r\n### Question Answering over Docs\r\n\r\n \r\n\r\nText-based question answering assesses the model's natural language understanding and generation abilities, and its grasp of common knowledge. We selected the transcript from the 2022 State of the Union address by President Biden as the document for querying. Six questions were posed to the model, each of which had its answer directly found within the text of the document. \r\n\r\n\r\n<img src=\"/images/blog/langchain/qa_table.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\n\r\nIn terms of understanding the queries, all three models were successful. However, when it came to text retrieval ability, OpenAI demonstrated a clear advantage over Vicuna. This could very likely be attributed to the higher quality of OpenAI's embeddings, making it easier for the model to locate similar content.\r\n\r\n\r\n### Salesman Agent Performance\r\n\r\nTo further evaluate the models' interaction capabilities, we implemented an approach by having the models take on the role of a salesman through LangChain. We posed several questions and invited GPT-4 to rate the quality of the responses provided by the different models.\r\n\r\nThis test offers insights into the quality of text generation and the ability to portray a convincing agent role, aspects that are of utmost importance within LangChain. The 'salesman' scenario is a robust way to understand how effectively a model can engage in complex dialogue, showcasing its ability to respond appropriately and convincingly in a specific role. The scoring criteria here also reflects the emphasis on quality, both in terms of coherence and the ability to effectively deliver on the task of playing the role of a 'salesman'.\r\n\r\n\r\n#### Sales Agent\r\n\r\nWe executed [SalesGPT](https://github.com/filip-michalsky/SalesGPT) tasks with open models and gpt-3.5-turbo. Below is the initialization code for SalesGPT.\r\n\r\n<img src=\"/images/blog/langchain/sales_agent.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\n#### GPT4 evaluation\r\n\r\nWe posed three questions to the salesman and then let GPT-4 grade and evaluate them.\r\n\r\n1. **Vicuna**:\r\n    * Answer 1: 9/10 - Comprehensive and clear, emphasizing the company's mission and values.\r\n    * Answer 2: 9/10 - Good explanation of the unique selling proposition, but could be more explicit in differentiating from competitors.\r\n    * Answer 3: 10/10 - Provides detailed product information, including environmental friendliness and hypoallergenic properties.\r\n    * Total Score: 28/30\r\n2. **GPT-3.5-turbo**:\r\n    * Answer 1: 8/10 - Concise, but does not expand on the company's mission and values.\r\n    * Answer 2: 8/10 - Repeats previous information, does not detail the differences from competitors.\r\n    * Answer 3: 10/10 - Provides detailed product information, focusing on environmental friendliness and hypoallergenic properties.\r\n    * Total Score: 26/30\r\n3. **MPT**:\r\n    * Answer 1: 8/10 - Clear and succinct, but does not delve into the company's mission and values.\r\n    * Answer 2: 8/10 - Lacks clarity on company specifics and fails to differentiate from competitors.\r\n    * Answer 3: 9/10 - Provides detailed product information, but not as explicit on the environmental friendliness and hypoallergenic properties as the other two.\r\n    * Total Score: 25/30\r\n\r\nThe Salesman test provided interesting insights into the conversational and agent capabilities of the three models: Vicuna, GPT-3.5-turbo, and MPT. Vicuna model, performed exceptionally well, earning a total score of 28 out of 30.In this particular task, the open models and GPT-3.5-turbo didn't show significant differences, suggesting that open models can serve as a viable alternative to GPT-3.5-turbo.\r\n\r\nIn conclusion, it's important to note that for complex tasks, there is still a gap between open models and OpenAI models. For simpler tasks, open models can already do well. For privacy considerations and cost savings, simpler tasks can be accomplished by deploying the open model locally with FastChat.\r\n\r\n\r\n## **Acknowledgment**\r\n\r\nThe OpenAI-compatible API Server is primarily contributed by Shuo Yang, Siyuan Zhuang, and Xia Han.\r\n","date":1686268800000},{"slug":"2023-05-25-leaderboard","frontmatter":{"title":"Chatbot Arena Leaderboard Updates (Week 4)","author":"LMSYS Org","date":"May 25, 2023","previewImg":"/images/blog/leaderboard_week4/leaderboard_cover.png"},"content":"\nIn this update, we are excited to welcome the following chatbots joining the Arena:\n\n1. Google PaLM 2, chat-tuned with the code name [chat-bison@001](https://cloud.google.com/vertex-ai/docs/release-notes#May_10_2023) on Google Cloud Vertex AI\n2. Anthropic Claude-instant-v1\n3. MosaicML MPT-7B-chat\n4. Vicuna-7B\n\nA new Elo rating leaderboard based on the 27K anonymous voting data collected **in the wild** between April 24 and May 22, 2023 is released in Table 1 below. \n\nWe provide a [Google Colab notebook](https://colab.research.google.com/drive/17L9uCiAivzWfzOxo2Tb9RMauT7vS6nVU?usp=sharing) to analyze the voting data, including the computation of the Elo ratings.\nYou can also try the voting [demo](https://arena.lmsys.org) and see the latest [leaderboard](https://leaderboard.lmsys.org).\n\n<style>\nth {text-align: left}\ntd {text-align: left}\n</style>\n\n<br>\n<p style=\"color:gray; text-align: center;\">Table 1. Elo ratings of LLMs (Timeframe: April 24 - May 22, 2023)</p>\n<table style=\"display: flex; justify-content: center;\" align=\"left\" >\n<tbody>\n<tr> <th>Rank</th> <th>Model</th> <th>Elo Rating</th> <th>Description</th> <th>License</th> </tr>\n\n<tr> <td>1</td> <td>🥇 <a href=\"https://chat.openai.com/\" target=\"_blank\">GPT-4</a></td> <td>1225</td> <td>ChatGPT-4 by OpenAI</td> <td>Proprietary</td> </tr>\n\n<tr> <td>2</td> <td>🥈 <a href=\"https://www.anthropic.com/index/introducing-claude\" target=\"_blank\">Claude-v1</a></td> <td>1195</td> <td>Claude by Anthropic</td> <td>Proprietary</td> </tr>\n\n<tr> <td>3</td> <td>🥉 <a href=\"https://www.anthropic.com/index/introducing-claude\" target=\"_blank\">Claude-instant-v1</a></td> <td>1153</td> <td>Lighter, less expensive, and much faster version of Claude</td> <td>Proprietary</td> </tr>\n\n<tr> <td>4</td> <td> <a href=\"https://chat.openai.com/\" target=\"_blank\">GPT-3.5-turbo</a></td> <td>1143</td> <td>ChatGPT-3.5 by OpenAI</td>  <td>Proprietary</td> </tr>\n\n<tr> <td>5</td> <td><a href=\"https://lmsys.org/blog/2023-03-30-vicuna/\" target=\"_blank\">Vicuna-13B</a></td> <td>1054</td> <td>a chat assistant fine-tuned from LLaMA on user-shared conversations by LMSYS</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>6</td> <td><a href=\"https://cloud.google.com/vertex-ai/docs/release-notes#May_10_2023\" target=\"_blank\">PaLM 2</a></td> <td>1042</td> <td>PaLM 2 tuned for chat (chat-bison@001 on Google Vertex AI). The PaLM 2 model family is powering Bard.</td> <td>Proprietary</td> </tr>\n\n<tr> <td>7</td> <td><a href=\"https://huggingface.co/lmsys/vicuna-7b-delta-v1.1\" target=\"_blank\">Vicuna-7B</a></td> <td>1007</td> <td>a chat assistant fine-tuned from LLaMA on user-shared conversations by LMSYS</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>8</td> <td><a href=\"https://bair.berkeley.edu/blog/2023/04/03/koala\" target=\"_blank\">Koala-13B</a></td> <td>980</td> <td>a dialogue model for academic research by BAIR</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>9</td> <td><a href=\"https://www.mosaicml.com/blog/mpt-7b\" target=\"_blank\">mpt-7b-chat</a></td> <td>952</td> <td>a chatbot fine-tuned from MPT-7B by MosaicML</td> <td>CC-By-NC-SA-4.0</td> </tr>\n\n<tr> <td>10</td> <td><a href=\"https://huggingface.co/lmsys/fastchat-t5-3b-v1.0\" target=\"_blank\">FastChat-T5-3B</a></td> <td>941</td> <td>a chat assistant fine-tuned from FLAN-T5 by LMSYS</td> <td>Apache 2.0</td> </tr>\n\n<tr> <td>11</td> <td><a href=\"https://crfm.stanford.edu/2023/03/13/alpaca.html\" target=\"_blank\">Alpaca-13B</a></td> <td>937</td> <td>a model fine-tuned from LLaMA on instruction-following demonstrations by Stanford</td>  <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>12</td> <td><a href=\"https://huggingface.co/BlinkDL/rwkv-4-raven\" target=\"_blank\">RWKV-4-Raven-14B</a></td> <td>928</td> <td>an RNN with transformer-level LLM performance</td> <td>Apache 2.0</td> </tr>\n\n<tr> <td>13</td> <td><a href=\"https://open-assistant.io\" target=\"_blank\">Oasst-Pythia-12B</a></td> <td>921</td> <td>an Open Assistant for everyone by LAION</td> <td>Apache 2.0</td> </tr>\n\n<tr> <td>14</td> <td><a href=\"https://chatglm.cn/blog\" target=\"_blank\">ChatGLM-6B</a></td> <td>921</td> <td>an open bilingual dialogue language model by Tsinghua University</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>15</td> <td><a href=\"https://github.com/stability-AI/stableLM\" target=\"_blank\">StableLM-Tuned-Alpha-7B</a></td> <td>882</td> <td>Stability AI language models</td>  <td>CC-BY-NC-SA-4.0</td> </tr>\n\n<tr> <td>16</td> <td><a href=\"https://www.databricks.com/blog/2023/04/12/dolly-first-open-commercially-viable-instruction-tuned-llm\" target=\"_blank\">Dolly-V2-12B</a></td> <td>866</td> <td>an instruction-tuned open large language model by Databricks</td> <td>MIT</td> </tr>\n\n<tr> <td>17</td> <td><a href=\"https://arxiv.org/abs/2302.13971\" target=\"_blank\">LLaMA-13B</a></td> <td>854</td> <td>open and efficient foundation language models by Meta</td> <td>Weights available; Non-commercial</td> </tr>\n\n</tbody>\n</table>\n\n&shy;\n\n**Win Fraction Matrix**  \nThe win fraction matrix of all model pairs is shown in Figure 1.\n<img src=\"/images/blog/leaderboard_week4/win_fraction_matrix.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 1: Fraction of Model A Wins for All Non-tied A vs. B Battles.</p>\n\nIf you want to see more models, please help us [add them](https://github.com/lm-sys/FastChat/blob/main/docs/arena.md#how-to-add-a-new-model) or [contact us](mailto:lmsysorg@gmail.com) by giving us API access.\n\n## Overview\n\n### Google PaLM 2\n\nGoogle's PaLM 2 is one of the most significant models announced since our last leaderboard update. We added the PaLM 2 Chat to the Chatbot Arena via the [Google Cloud Vertex AI API](https://cloud.google.com/vertex-ai/docs/release-notes#May_10_2023). The model is chat-tuned under the code name *chat-bison@001*.\n\nIn the past two weeks, PaLM 2 has competed for around 1.8k anonymous battles with the other 16 chatbots, currently ranked 6th on the leaderboard. It ranks above all other open-source chatbots, except for Vicuna-13B, whose Elo is 12 scores higher than PaLM 2 (Vicuna 1054 vs. PaLM 2 1042) which in terms of ELO rating is nearly a virtual tie. We noted the following interesting results from PaLM 2's Arena data.\n\nPaLM 2 is better when playing against the top 4 players, i.e., GPT-4, Claude-v1, ChatGPT, Claude-instant-v1, and it also wins 53% of the plays with Vicuna, but worse when playing against weaker players. This can be seen in Figure 1 which shows the win fraction matrix. Among all battles PaLM 2 has participated in, 21.6% were lost to a chatbot that is not one of GPT-4, Claude-v1, GPT-3.5-turbo, Claude-instant-v1. For reference, another proprietary model GPT-3.5-turbo only loses 12.8% of battles to those chatbots.\n\nIn short, we find that the current PaLM 2 version available at Google Cloud Vertex API has the following deficiencies when compared to other models we have evaluated:\n\n1. PaLM 2 seems more strongly regulated than other models which impacts its ability to answer some questions.\n2. The currently offered PaLM 2 has limited multilingual abilities.\n3. The currently offered PaLM 2 has unsatisfied reasoning capabilities.\n\n**PaLM 2 is more strongly regulated**\n\nPaLM 2 seems to be more strongly regulated than other models. In many user conversations, when the users ask questions that PaLM 2 is uncertain or uncomfortable giving an answer to, PaLM 2 is more likely to abstain from responding than other models. \n\nBased on a rough estimate, among all pairwise battles, PaLM 2 has lost 20.9% of the battles due to refusing to answer, and it has lost 30.8% of the battles to chatbots not belonging to one of the top four (GPT-4, Claude-v1, ChatGPT, Claude-instant-v1) due to refusing to answer.\n\nThis partially explains why PaLM 2 frequently loses plays to weaker chatbots on the leaderboard. This also highlights a flaw in the chatbot arena methodology, as casual users are more likely to penalize abstention over subtly inaccurate responses. Below we provide several failure cases illustrating how PaLM loses plays to weaker chatbots because it refuses to answer the question.\n\n\nWe also noticed that, sometimes, it is hard to clearly specify the boundary for LLM regulation. In the offered PaLM 2 versions, we see several undesired tendencies: \n - PaLM 2 refuses many roleplay questions, even if the users asked it to emulate a Linux terminal or a programming language interpreter.\n - Sometimes PaLM 2 refuses to answer easy and non-controversial factual questions. \n\nSeveral examples are shown below:\n\n<img src=\"/images/blog/leaderboard_week4/PaLM2_refusal_1.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<img src=\"/images/blog/leaderboard_week4/PaLM2_refusal_2.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 2: Example questions that PaLM 2 refuses to answer.</p>\n\n\n**Limited multilingual abilities**\n\nWe do not see strong multilingual abilities from PaLM 2 with the currently offered public API chat-bison@001 at Google Vertex API. PaLM 2 tends to not answer non-English questions, including questions written in popular languages such as Chinese, Spanish, and Hebrew. We were unable to reproduce several multilingual examples demonstrated in the PaLM 2 technical report using the current PaLM 2 versions. We are waiting for Google to gradually release the latest version of PaLM 2. \n\nWe also calculate the Elo ratings of all models when only considering English and only considering non-English conversations, respectively, illustrated in Figure 3. The results confirm the observations – on the non-English leaderboard, PaLM 2 ranks 16th.\n\n<img src=\"/images/blog/leaderboard_week4/language_leaderboard.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 3: The English-only and non-English leaderboards.</p>\n\n\n**PaLM 2's reasoning ability is unsatisfied**\n\nWe also observe the offered PaLM 2 version do not demonstrate strong reasoning capabilities. On one hand, it seems to detect if the question is in plain text, and tends to refuse many questions not in plain text, such as those in programming languages, debugging, and code interpretation. On the other hand, we see PaLM 2 didn’t perform well on some entry-level reasoning tasks when compared against other chatbots. See several examples in Figure 4.\n\n<img src=\"/images/blog/leaderboard_week4/PaLM2_reasoning_1.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<img src=\"/images/blog/leaderboard_week4/PaLM2_reasoning_2.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 4: Examples where PaLM 2 fails on simple reasoning tasks.</p>\n\n\n**Elo ratings after removing non-English and refusal conversations**\n\nWe remove all non-English conversations and all conversations for which PaLM 2 didn’t provide an answer and calculate the Elo ratings of each model with the filtered data. This rating represents a hypothetical upper bound of PaLM 2's Elo in the Arena. See Figure 5 below.\n\n<img src=\"/images/blog/leaderboard_week4/english_non_refusal_leaderboard.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto; width: 500px;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 5: The leaderboard after removing PaLM 2's non-English and refusal conversations.</p>\n\n### Smaller Models Are Competitive\n\nWe observe several smaller models, including vicuna-7B and mpt-7b-chat, have achieved high ratings on the leaderboard. These smaller models perform favorably when compared against larger models with doubled parameters. \n\nWe speculate that high-quality pre-training and fine-tuning datasets are more critical than model size. However, it is possible that larger models would still perform better with more complex reasoning tasks or answering more subtle questions (e.g., Trivia).\nHence, curating high-quality datasets in both pretraining and finetuning stages seems to be a key approach to reducing model sizes while keeping model quality high.\n\n\n### Claude-v1 and Claude-instant-v1\nClaude-instant-v1 is a low-cost, faster alternative to Claude-v1 offered by Anthropic. If benchmarked in the wild in the arena, we observe that Claude-instant is close to GPT-3.5-turbo (1153 vs. 1143). The rating gap between Claude and Claude-instant seems smaller than that between GPT-4 and GPT-3.5-turbo. Claude-instant has a context length of 9K, is charged at a price of 0.00163/1K prompt token and 0.00551/1K completion token, compared to its OpenAI opponent product – GPT-3.5-turbo – with a context length of 4K and a uniform price of 0.002/1K token (regardless of prompt or completion).\n\n### Limitations of the “In-the-wild” Evaluation\nHowever, we want to point out a few facts about the current chatbot Arena and leaderboard. The current Arena is designed to benchmark LLM-based chatbots **\"in the wild\"**. That means, the voting data provided by our Arena users and the prompts-answers generated during the voting process reflect how the chatbots perform in normal human-chatbot interactions. This might not align with many benchmarking results in the LLM research literature, which tends to characterize long-tail abilities like zero-shot, complex reasoning, etc. Hence, the current chatbot arena has limitations in clearly reflecting the long-tail capability difference between chatbots. See the later section for more details and our plan.\n\n\n## Next Steps\n**Evaluating long-tail capability of LLMs**\n\nAs pointed out by the community in [thread 1](https://twitter.com/tinkerteller/status/1656914923316998144?s=20) and [thread 2](https://twitter.com/LechMazur/status/1659915936919347202?s=20), the current Arena and leaderboard design has one major limitation: Performing user studies on a small scale often cannot generate many hard or medium prompts that are necessary to tell the long-tail capability difference between LLMs. Moreover, for difficult questions, it is also very hard for regular Arena users to judge which LLM has generated a better answer -- some domain-specific questions are considered very difficult, even for 99% of non-expert humans.\n\nHowever, long-tail capability, such as complex reasoning, can be crucial for LLMs to complete real-world tasks. Building long-tail capability into LLMs is the holy-grail problem and is the most actively studied and invested area in LLM development.\n\nWe listen carefully to the community feedback and are thinking about how to improve the leaderboard to overcome these limitations and capture the long-tail capability different in LLMs. On top of the Chatbot Arena, we are actively designing a new tournament mechanism to examine the chatbots using presets of expert-designed questions and expert judges. We will have more updates soon.\n\n**More models**\n\nSince the launch of Arena, we have received many requests from the community to add more models. Due to the limited compute resources and bandwidth we have, we may not be able to serve all of them. We are working on improving the scalability of our serving systems.\nIn the meanwhile, you can still contribute support for [new models](https://github.com/lm-sys/FastChat/blob/main/docs/arena.md#how-to-add-a-new-model) or contact us if you can help us scale the system.\n","date":1684972800000},{"slug":"2023-05-10-leaderboard","frontmatter":{"title":"Chatbot Arena Leaderboard Updates (Week 2)","author":"LMSYS Org","date":"May 10, 2023","previewImg":"/images/blog/leaderboard_week2/leaderboard_cover.png"},"content":"\nWe release an updated leaderboard with more models and new data we collected last week, after the announcement of the anonymous [Chatbot Arena](https://lmsys.org/blog/2023-05-03-arena/). We are actively iterating on the design of the arena and leaderboard scores.\n\nIn this update, we have added 4 new yet strong players into the Arena, including three **proprietary models** and one open-source model. They are:\n\n- OpenAI GPT-4\n- OpenAI GPT-3.5-turbo\n- Anthropic Claude-v1\n- RWKV-4-Raven-14B \n\nTable 1 displays the Elo ratings of all 13 models, which are based on the 13K voting data and calculations shared in this [notebook](https://colab.research.google.com/drive/1iI_IszGAwSMkdfUrIDI6NfTG7tGDDRxZ?usp=sharing). You can also try the voting [demo](https://arena.lmsys.org) and see the latest [leaderboard](https://leaderboard.lmsys.org).\n\n<style>\nth {text-align: left}\ntd {text-align: left}\n</style>\n\n<br>\n<p style=\"color:gray; text-align: center;\">Table 1. Elo ratings of LLMs (Timeframe: April 24 - May 8, 2023)</p>\n<table style=\"display: flex; justify-content: center;\" align=\"left\" >\n<tbody>\n<tr> <th>Rank</th> <th>Model</th> <th>Elo Rating</th> <th>Description</th> <th>License</th> </tr>\n\n<tr> <td>1</td> <td>🥇 <a href=\"https://chat.openai.com/\" target=\"_blank\">GPT-4</a></td> <td>1274</td> <td>ChatGPT-4 by OpenAI</td> <td>Proprietary</td> </tr>\n\n<tr> <td>2</td> <td>🥈 <a href=\"https://www.anthropic.com/index/introducing-claude\" target=\"_blank\">Claude-v1</a></td> <td>1224</td> <td>Claude by Anthropic</td> <td>Proprietary</td> </tr>\n\n<tr> <td>3</td> <td>🥉 <a href=\"https://chat.openai.com/\" target=\"_blank\">GPT-3.5-turbo</a></td> <td>1155</td> <td>ChatGPT-3.5 by OpenAI</td>  <td>Proprietary</td> </tr>\n\n<tr> <td>4</td> <td><a href=\"https://lmsys.org/blog/2023-03-30-vicuna/\" target=\"_blank\">Vicuna-13B</a></td> <td>1083</td> <td>a chat assistant fine-tuned from LLaMA on user-shared conversations by LMSYS</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>5</td> <td><a href=\"https://bair.berkeley.edu/blog/2023/04/03/koala\" target=\"_blank\">Koala-13B</a></td> <td>1022</td> <td>a dialogue model for academic research by BAIR</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>6</td> <td><a href=\"https://huggingface.co/BlinkDL/rwkv-4-raven\" target=\"_blank\">RWKV-4-Raven-14B</a></td> <td>989</td> <td>an RNN with transformer-level LLM performance</td> <td>Apache 2.0</td> </tr>\n\n<tr> <td>7</td> <td><a href=\"https://open-assistant.io\" target=\"_blank\">Oasst-Pythia-12B</a></td> <td>928</td> <td>an Open Assistant for everyone by LAION</td> <td>Apache 2.0</td> </tr>\n\n<tr> <td>8</td> <td><a href=\"https://chatglm.cn/blog\" target=\"_blank\">ChatGLM-6B</a></td> <td>918</td> <td>an open bilingual dialogue language model by Tsinghua University</td> <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>9</td> <td><a href=\"https://github.com/stability-AI/stableLM\" target=\"_blank\">StableLM-Tuned-Alpha-7B</a></td> <td>906</td> <td>Stability AI language models</td>  <td>CC-BY-NC-SA-4.0</td> </tr>\n\n<tr> <td>10</td> <td><a href=\"https://crfm.stanford.edu/2023/03/13/alpaca.html\" target=\"_blank\">Alpaca-13B</a></td> <td>904</td> <td>a model fine-tuned from LLaMA on instruction-following demonstrations by Stanford</td>  <td>Weights available; Non-commercial</td> </tr>\n\n<tr> <td>11</td> <td><a href=\"https://huggingface.co/lmsys/fastchat-t5-3b-v1.0\" target=\"_blank\">FastChat-T5-3B</a></td> <td>902</td> <td>a chat assistant fine-tuned from FLAN-T5 by LMSYS</td> <td>Apache 2.0</td> </tr>\n\n<tr> <td>12</td> <td><a href=\"https://www.databricks.com/blog/2023/04/12/dolly-first-open-commercially-viable-instruction-tuned-llm\" target=\"_blank\">Dolly-V2-12B</a></td> <td>863</td> <td>an instruction-tuned open large language model by Databricks</td> <td>MIT</td> </tr>\n\n<tr> <td>13</td> <td><a href=\"https://arxiv.org/abs/2302.13971\" target=\"_blank\">LLaMA-13B</a></td> <td>826</td> <td>open and efficient foundation language models by Meta</td> <td>Weights available; Non-commercial</td> </tr>\n\n</tbody>\n</table>\n\n&shy;\n\nIf you want to see more models, please help us [add them](https://github.com/lm-sys/FastChat/blob/main/docs/arena.md#how-to-add-a-new-model) or [contact us](mailto:lmsysorg@gmail.com) by giving us API access.\n\n## Overview\nThanks to the community's help, we have gathered 13k anonymous votes. Looking at the rankings and data collected from this leaderboard update, we have a few interesting findings.\n\n**Gaps between proprietary and open-source models**  \nWe do observe a substantial gap between the three proprietary models and all other open-source models. \nIn particular, GPT-4 is leading the board, achieving an Elo score of 1274. It is almost 200 scores higher than the best open-source alternative on this board -- our Vicuna-13B.\nAfter dropping ties, GPT-4 wins 82% of the matches when it is against Vicuna-13B, and it even wins 79% of the matches when it is against its previous generation GPT-3.5-turbo.\n\nHowever, it is important to note that these open-source models on the leaderboard generally have fewer parameters, in the range of 3B - 14B, than proprietary models.\nIn fact, recent advancements in LLMs and data curation have allowed for significant improvements in performance with smaller models. \n[Google's latest PaLM 2](https://ai.google/discover/palm2) is a great example of this: knowing that PaLM 2 achieves even better performance than its previous generation using smaller model sizes, \nwe remain very optimistic about the potential for open-source language models to catch up. Through our [FastChat-based Chatbot Arena](https://github.com/lm-sys/FastChat) and this leaderboard effort, \nwe hope to contribute a trusted evaluation platform for evaluating LLMs, and help advance this field and create better language models for everyone.\n \n\n**Comparing proprietary models**  \nHowever, among the three proprietary models, we do observe, based on our collected voting results, \nthat Anthropic's Claude model is preferred by our users over GPT-3.5-turbo, which is often discussed as its opponent.\nIn fact, Claude is highly competitive even when competing against the most powerful model -- OpenAI's GPT-4. \nLooking at the win rate plots (Figure 3 below), among the 66 non-tied matches between GPT-4 and Claude, Claude indeed wins over GPT-4 in 32 (48%) matches. Great job Anthropic team!\n\n**Comparing open-source chatbots**  \nIn this update, we have added RWKV-4-Raven-14B model into the Arena thanks to the community [contribution](https://github.com/lm-sys/FastChat/issues/633). Unlike all other models, RWKV model is an RNN instead of a transformer-based model; but it performs surprisingly well!\nIt soon uptrends on the leaderboard and is positioned #6 on the overall leaderboard. It wins more than 50% of non-tied matches against all other open-source models except Vicuna. You are welcome to check out its [repo](https://github.com/BlinkDL/RWKV-LM) to learn more about other features like memory saving and fast inference.\nKudos to the RWKV developers.\n\n**Fluctuations of Elo scores**  \nThe Elo scores of existing models can go up and down depending on the results of the new games played. This is similar to the way the Elo scores of chess players vary over time (see [here](https://en.chessbase.com/post/historical-chess-ratings-dynamically-presented)).\nSince the participation of the three strong proprietary models, the Chatbot Arena has never been more competitive than ever before!\nAs a consequence, we observe the Elo scores of all open source models have decreased a bit. This is because open source models lose lots of pairwise matches when they are against the proprietary models.\n\n## Detailed Results\n\n**When does GPT-4 fail?**  \nWe present a few examples in which GPT-4 is not preferred by users.\n\n<img src=\"/images/blog/leaderboard_week2/claude_vs_gpt4.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 1: One example where Claude is preferred over GPT-4.</p>\n\nIn Figure 1, the user posed a tricky question that demanded careful reasoning and planning. Although both Claude and GPT-4 provided similar answers, Claude's response was marginally better as the needle was positioned on top. \nHowever, we observed that the outcome of this example cannot always be replicated due to the randomness of sampling.\nSometimes GPT-4 can also give the same order as Claude, but it fails at this generation trial.\nAdditionally, we noted that the behavior of GPT-4 differed slightly when using the OpenAI API versus the ChatGPT interface, which could be attributed to different prompts, sampling parameters, or other unknown factors.\n\n<img src=\"/images/blog/leaderboard_week2/claude_vs_gpt4_fail.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 2: One example where a user thinks both Claude and GPT-4 are wrong.</p>\n\nIn Figure 2, both Claude and GPT-4 are still struggling with this kind of tricky reasoning questions despite their amazing capabilities.\n\nBesides these tricky cases, there are also a lot of easy questions that do not require complex reasoning or knowledge. In this case, open source models like Vicuna can perform on par with GPT-4, so we might be able to use a slightly weaker (but smaller or cheaper) LLM in place of the more powerful one like GPT-4.\n\n**Win Fraction Matrix**  \nWe present the win fraction of all model pairs in Figure 3.\n<img src=\"/images/blog/leaderboard_week2/win_fraction_matrix.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 3: Fraction of Model A Wins for All Non-tied A vs. B Battles.</p>\n\n**Language-specific leaderboards**  \nLastly, we present two language-specific leaderboards, by isolating the conversation data into two subsets based on the language: (1) English-only and (2) non-English. From Figure 4, we can tell that Koala is worse at non-English languages and ChatGLM-6B is better at non-English languages. This is because of the different compositions of their training data.\n\n<img src=\"/images/blog/leaderboard_week2/english_vs_non_english.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\n<p style=\"color:gray; text-align: center;\">Figure 4: The English-only and non-English leaderboards.</p>\n\nMore figures, analyses, and calculations can be found in this [notebook](https://colab.research.google.com/drive/1iI_IszGAwSMkdfUrIDI6NfTG7tGDDRxZ?usp=sharing).\n\n## Next Steps\n\n**Help us add more models**  \nSince the launch of Chatbot Arena, we have seen growing interest from the community. Many model developers are eager to put their chatbots into the Arena and see how they perform against others.\nPlease help us add more models by following [this guide](https://github.com/lm-sys/FastChat/blob/main/docs/arena.md#how-to-add-a-new-model). \n\n**Bring your own self-hosted chatbot (BYOC)**  \nWe also plan to open some APIs to allow competitors to register their self-hosted chatbots and participate in the Arena.\n\n**Area-specific Arena**  \nSimilar to the language-specific Arena, we will extend a single, monolithic leaderboard to more areas, and publish more functionality-specific leaderboards, \nsuch as writing, coding, and reasoning. In which specific area or ability do you want to see the LLMs evaluated?\nPlease give us feedback on [Discord](https://discord.gg/HSWAKCrnFx) or [Twitter](https://twitter.com/lmsysorg).\n\n## Acknowledgement\nThis blog post is primarily contributed by Lianmin Zheng, Ying Sheng, Hao Zhang, Joseph E. Gonzalez, and Ion Stoica.\nWe thank other members of LMSYS team (Wei-Lin Chiang, Siyuan Zhuang, and more) for valuable feedback and MBZUAI for donating compute resources.\nAdditionally, we extend our thanks to community contributors for their votes and model support.\n","date":1683676800000},{"slug":"2023-05-03-arena","frontmatter":{"title":"Chatbot Arena: Benchmarking LLMs in the Wild with Elo Ratings","author":"Lianmin Zheng*, Ying Sheng*, Wei-Lin Chiang, Hao Zhang, Joseph E. Gonzalez, Ion Stoica","date":"May 3, 2023","previewImg":"/images/blog/arena/cover.png"},"content":"\r\nWe present Chatbot Arena, a benchmark platform for large language models (LLMs) that features anonymous, randomized battles in a crowdsourced manner. In this blog post, we are releasing our initial results and a leaderboard based on the Elo rating system, which is a widely-used rating system in chess and other competitive games. We invite the entire community to join this effort by contributing new models and evaluating them by asking questions and voting for your favorite answer.\r\n\r\n<style>\r\nth {text-align: left}\r\ntd {text-align: left}\r\n</style>\r\n\r\n<br>\r\n<p style=\"color:gray; text-align: center;\">Table 1. Elo ratings of popular open-source large language models. (Timeframe: April 24 - May 1, 2023)</p>\r\n<table style=\"display: flex; justify-content: center;\" align=\"left\" >\r\n<tbody>\r\n<tr>\r\n<th>Rank</th> <th>Model</th> <th>Elo Rating</th> <th>Description</th>\r\n</tr>\r\n<tr>\r\n<td>1</td> <td>🥇 <a href=\"https://lmsys.org/blog/2023-03-30-vicuna/\" target=\"_blank\">vicuna-13b</a></td> <td>1169</td> <td>a chat assistant fine-tuned from LLaMA on user-shared conversations by LMSYS</td>\r\n</tr>\r\n<tr>\r\n<td>2</td> <td>🥈 <a href=\"https://bair.berkeley.edu/blog/2023/04/03/koala\" target=\"_blank\">koala-13b</a></td> <td>1082</td> <td>a dialogue model for academic research by BAIR</td>\r\n</tr>\r\n<tr>\r\n<td>3</td> <td>🥉 <a href=\"https://open-assistant.io\" target=\"_blank\">oasst-pythia-12b</a></td> <td>1065</td> <td>an Open Assistant for everyone by LAION</td>\r\n</tr>\r\n<tr>\r\n<td>4</td> <td><a href=\"https://crfm.stanford.edu/2023/03/13/alpaca.html\" target=\"_blank\">alpaca-13b</a></td> <td>1008</td> <td>a model fine-tuned from LLaMA on instruction-following demonstrations by Stanford</td>\r\n</tr>\r\n<tr>\r\n<td>5</td> <td><a href=\"https://chatglm.cn/blog\" target=\"_blank\">chatglm-6b</a></td> <td>985</td> <td>an open bilingual dialogue language model by Tsinghua University</td>\r\n</tr>\r\n<tr>\r\n<td>6</td> <td><a href=\"https://huggingface.co/lmsys/fastchat-t5-3b-v1.0\" target=\"_blank\">fastchat-t5-3b</a></td> <td>951</td> <td>a chat assistant fine-tuned from FLAN-T5 by LMSYS</td>\r\n</tr>\r\n<tr>\r\n<td>7</td> <td><a href=\"https://www.databricks.com/blog/2023/04/12/dolly-first-open-commercially-viable-instruction-tuned-llm\" target=\"_blank\">dolly-v2-12b</a></td> <td>944</td> <td>an instruction-tuned open large language model by Databricks</td>\r\n</tr>\r\n<tr>\r\n<td>8</td> <td><a href=\"https://arxiv.org/abs/2302.13971\" target=\"_blank\">llama-13b</a></td> <td>932</td> <td>open and efficient foundation language models by Meta</td>\r\n</tr>\r\n<tr>\r\n<td>9</td> <td><a href=\"https://github.com/stability-AI/stableLM\" target=\"_blank\">stablelm-tuned-alpha-7b</a></td> <td>858</td> <td>Stability AI language models</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n&shy;\r\n\r\nTable 1 displays the Elo ratings of nine popular models, which are based on the 4.7K voting data and calculations shared in this [notebook](https://colab.research.google.com/drive/1lAQ9cKVErXI1rEYq7hTKNaCQ5Q8TzrI5?usp=sharing). You can also try the voting [demo](https://arena.lmsys.org) and see the latest [leaderboard](https://leaderboard.lmsys.org).\r\n\r\n<img src=\"/images/blog/arena/chat_demo.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 1. The side-by-side chatting and voting interface.</p>\r\n\r\nPlease note that we periodically release blog posts to update the leaderboard. Feel free to check the following updates:\r\n- [May 10 Updates](https://lmsys.org/blog/2023-05-10-leaderboard/)\r\n- [May 25 Updates](https://lmsys.org/blog/2023-05-25-leaderboard/)\r\n\r\n## Introduction\r\nFollowing the great success of ChatGPT, there has been a proliferation of open-source large language models that are finetuned to follow instructions. These models are capable of providing valuable assistance in response to users’ questions/prompts. Notable examples include Alpaca and Vicuna, based on LLaMA, and OpenAssistant and Dolly, based on Pythia.\r\n\r\nDespite the constant release of new models every week, the community faces a challenge in benchmarking these models effectively. Benchmarking LLM assistants is extremely challenging because the problems can be open-ended, and it is very difficult to write a program to automatically evaluate the response quality.\r\nIn this case, we typically have to resort to human evaluation based on pairwise comparison.\r\n\r\nThere are some desired properties for a good benchmark system based on pairwise comparison.\r\n- **Scalability**. The system should scale to a large number of models when it is not feasible to collect sufficient data for all possible model pairs.\r\n- **Incrementality**. The system should be able to evaluate a new model using a relatively small number of trials.\r\n- **Unique order**. The system should provide a unique order for all models. Given any two models, we should be able to tell which ranks higher or whether they are tied.\r\n\r\nExisting LLM benchmark systems rarely satisfy all of these properties. Classical LLM benchmark frameworks, such as [HELM](https://crfm.stanford.edu/helm/latest/) and [lm-evaluation-harness](https://github.com/EleutherAI/lm-evaluation-harness), provide multi-metric measurements for tasks commonly used in academic research. However, they are not based on pairwise comparison and are not effective at evaluating open-ended questions. OpenAI also launched the [evals](https://github.com/openai/evals) project to collect better questions, but this project does not provide ranking mechanisms for all participating models. When we launched our [Vicuna](https://lmsys.org/blog/2023-03-30-vicuna/) model, we utilized a GPT-4-based evaluation pipeline, but it does not provide a solution for scalable and incremental ratings.\r\n\r\nIn this blog post, we introduce Chatbot Arena, an LLM benchmark platform featuring anonymous randomized battles in a crowdsourced manner. Chatbot Arena adopts the [Elo rating system](https://en.wikipedia.org/wiki/Elo_rating_system), which is a widely-used rating system in chess and other competitive games. The Elo rating system is promising to provide the desired property mentioned above. We noticed that the [Anthropic LLM paper](https://arxiv.org/pdf/2204.05862.pdf) also adopted the Elo rating system.\r\n\r\nTo collect data, we launched the arena with several popular open-source LLMs one week ago. In the arena, a user can chat with two anonymous models side-by-side and vote for which one is better. This crowdsourcing way of data collection represents some use cases of LLMs in the wild. A comparison between several evaluation methods is shown in Table 2.\r\n\r\n<br>\r\n<p style=\"color:gray; text-align: center;\">Table 2: Comparison between different evaluation methods.</p>\r\n<table style=\"display: flex; justify-content: center;\">\r\n<tbody>\r\n<tr>\r\n<th></th> <th>HELM / lm-evaluation-harness</th> <th>OpenAI/eval</th> <th>Alpaca Evaluation</th> <th>Vicuna Evaluation</th> <th>Chatbot Arena</th>\r\n</tr>\r\n<tr>\r\n<td>Question Source</td> <td>Academic datasets</td> <td>Mixed</td> <td>Self-instruct evaluation set</td> <td>GPT-4 generated</td> <td>User prompts</td>\r\n</tr>\r\n<tr>\r\n<td>Evaluator</td> <td>Program</td> <td>Program/Model</td> <td>Human</td> <td>GPT-4</td> <td>User</td>\r\n</tr>\r\n<tr>\r\n<td>Metrics</td> <td>Basic metrics </td> <td>Basic metrics</td> <td>Win rate</td> <td>Win rate</td> <td>Elo ratings</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n## Data Collection\r\nWe hosted the arena at [https://arena.lmsys.org](https://arena.lmsys.org) with our multi-model serving system, [FastChat](https://github.com/lm-sys/FastChat). When a user enters the arena, they can chat with two anonymous models side-by-side, as shown in Figure 1.\r\nAfter getting responses from the two models, users can continue chatting or vote for the model they think is better. Once a vote is submitted, the model names will be revealed. Users can continue chatting or restart a new battle with two new randomly chosen anonymous models. The platform logs all user interactions. In our analysis, we only use the votes when the model names are hidden.\r\n\r\nThe arena was launched about one week ago and we have collected 4.7k valid anonymous votes since then.  We share some exploratory analysis in this [notebook](https://colab.research.google.com/drive/1lAQ9cKVErXI1rEYq7hTKNaCQ5Q8TzrI5?usp=sharing) and present a short summary here.\r\n\r\n<img src=\"/images/blog/arena/battle_counts.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto; width: 60%\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 2: Battle count of each combination of models</p>\r\n\r\nFigure 2 shows the battles count of each combination of models. When we initially launched the tournament, we had prior information on the likely ranking based on our benchmarks and chose to pair models according to this ranking. We gave preference to what we believed would be strong pairings based on this ranking. However, we later switched to uniform sampling to get better overall coverage of the rankings. Towards the end of the tournament, we also introduced a new model `fastchat-t5-3b`. All of these result in non-uniform model frequency.\r\n\r\n<img src=\"/images/blog/arena/lang_counts.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto; width: 80%\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 3: Battle counts for the top-15 languages.</p>\r\n\r\nFigure 3 plots the language distribution and shows most user prompts are in English.\r\n\r\n## Elo Rating System\r\nThe [Elo rating system](https://en.wikipedia.org/wiki/Elo_rating_system) is a method for calculating the relative skill levels of players, which has been widely adopted in competitive games and sports. The difference in the ratings between two players serves as a predictor of the outcome of a match. The Elo rating system works well for our case because we have multiple models and we run pairwise battles between them.\r\n\r\nIf player A has a rating of `Ra` and player B a rating of `Rb`, the exact formula (using the logistic curve with base 10) for the probability of player A winning is\r\n\r\n<img src=\" https://wikimedia.org/api/rest_v1/media/math/render/svg/7c80282e9c95e92d6b210467aab48a8c4c81ef10\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\nThe ratings of players can be linearly updated after each battle. Suppose player A (with Rating `Ra`) was expected to score `Ea` points but actucally scored `Sa` points. The formula for updating that player's rating is \r\n\r\n<img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/1cad9fb1cfc6a8e845493ac9a40eb98541a4641a\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n\r\nUsing the collected data, we compute the Elo ratings of the models in this [notebook](https://colab.research.google.com/drive/1lAQ9cKVErXI1rEYq7hTKNaCQ5Q8TzrI5?usp=sharing) and put the main results in Table 1. You are welcome to try the notebook and play with the voting data by yourself. The data only contains voting results without conversation histories because releasing the conversation history will raise concerns such as privacy and toxicity.\r\n\r\n## Pairwise Win Rates\r\nAs a basis for calibration, we also present here the pairwise win rates for each model in the tournament (Figure 4) as well as the predicted pairwise win rate estimated using Elo ratings (Figure 5).\r\nBy comparing the figures, we find the elo ratings can predict win rates relatively well.\r\n\r\n<img src=\"/images/blog/arena/win_fraction.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 4: Fraction of Model A wins for all non-tied A vs. B battles.</p>\r\n\r\n<img src=\"/images/blog/arena/predicted_win_fraction.png\" style=\"display:block; margin-left: auto; margin-right: auto; margin-bottom: auto;\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 5: Predicted win rate using Elo ratings for Model A in an A vs. B battle</p>\r\n\r\n## Future Plans\r\nWe plan to work on the following items:\r\n- Add more closed-source models (ChatGPT-3.5, ChatGPT-4, and Claude-v1 are avaiable now in the anonymous Arena)\r\n- Add more open-source models\r\n- Release periodically updated leaderboards (e.g., monthly)\r\n- Implement better sampling algorithms, tournament mechanisms, and serving systems to support a much larger number of models\r\n- Provide fine-grained rankings on different task types.\r\n\r\nWe appreciate any feedback from you to make the arena better.\r\n\r\n## Join Us\r\nWe invite the entire community to join this benchmarking effort by contributing your models and votes for the anonymous models you think provide better answers. You can visit [https://arena.lmsys.org](https://arena.lmsys.org) to vote for better models. If you want to see a specific model in the arena, you can follow this [guide](https://github.com/lm-sys/FastChat/blob/main/docs/arena.md#how-to-add-a-new-model) to help us add it.\r\n\r\n## Acknowledgment\r\nWe thank other members of the Vicuna team for valuable feedback and MBZUAI for donating compute resources. Additionally, we extend our thanks to Tianjun Zhang and Eric Wallace for their insightful discussions.\r\n\r\n## Links\r\n- Demo: [https://arena.lmsys.org](https://arena.lmsys.org)\r\n- Leaderboard: [https://leaderboard.lmsys.org](https://leaderboard.lmsys.org)\r\n- GitHub: [https://github.com/lm-sys/FastChat](https://github.com/lm-sys/FastChat)\r\n- Colab notebook: [https://colab.research.google.com/drive/1lAQ9cKVErXI1rEYq7hTKNaCQ5Q8TzrI5?usp=sharing](https://colab.research.google.com/drive/1lAQ9cKVErXI1rEYq7hTKNaCQ5Q8TzrI5?usp=sharing)\r\n","date":1683072000000},{"slug":"2023-03-30-vicuna","frontmatter":{"title":"Vicuna: An Open-Source Chatbot Impressing GPT-4 with 90%* ChatGPT Quality","author":"The Vicuna Team","date":"March 30, 2023","previewImg":"/images/blog/vicuna/vicuna.jpeg"},"content":"\r\nWe introduce Vicuna-13B, an open-source chatbot trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT. Preliminary evaluation using GPT-4 as a judge shows Vicuna-13B achieves more than 90%* quality of OpenAI ChatGPT and Google Bard while outperforming other models like LLaMA and Stanford Alpaca in more than 90%<sup>*</sup> of cases. The cost of training Vicuna-13B is around $300. The [code](https://github.com/lm-sys/FastChat) and [weights](https://github.com/lm-sys/FastChat#vicuna-weights), along with an online [demo](https://chat.lmsys.org), are publicly available for non-commercial use.\r\n\r\n<img src=\"/images/blog/vicuna/vicuna.jpeg\" style=\"width: 30%; margin-left: auto; margin-right: auto; margin-bottom: auto\"></img>\r\n<p style=\"color:gray; text-align: center;\">Vicuna (generated by stable diffusion 2.1) </p>\r\n\r\n<p style=\"color:gray;\">*According to a fun and non-scientific evaluation with GPT-4. Further rigorous evaluation is needed.</p>\r\n\r\n## How Good is Vicuna?\r\nAfter fine-tuning Vicuna with 70K user-shared ChatGPT conversations, we discover that Vicuna becomes capable of generating more detailed and well-structured answers compared to Alpaca (see examples below), with the quality on par with ChatGPT.\r\n\r\n<style>\r\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\r\n.tg td{border-color:#ccc;border-style:solid;border-width:1px;\r\n  overflow:hidden;padding:10px 5px;word-break:normal;}\r\n.tg .tg-head{background-color:#c0c0c0;border-color:#ccc;text-align:left;vertical-align:top;}\r\n.tg .tg-body{text-align:left;vertical-align:top;}\r\n</style>\r\n\r\n<style>\r\n  iframe {\r\n    display: block;\r\n    width: 100%;\r\n    height: 950px;\r\n    border: none;\r\n    overflow: hidden;\r\n  }\r\n</style>\r\n<iframe src=\"/images/blog/vicuna/gpt4eval/index.html\"></iframe>\r\n<hr>\r\n\r\nHowever, evaluating chatbots is never a simple task. \r\nWith recent advancements in GPT-4, we are curious whether its capabilities have reached a human-like level that could enable an automated evaluation framework for benchmark generation and performance assessments. \r\nOur initial finding indicates that GPT-4 can produce highly consistent ranks and detailed assessment when comparing chatbots’ answers (see above example of GPT-4 judgment).\r\nPreliminary evaluations based on GPT-4, summarized in Figure 1, show that Vicuna achieves 90%<sup>*</sup> capability of Bard/ChatGPT. \r\nWhile this proposed framework shows a potential to automate chatbot assessment, **it is not yet a rigorous approach**. \r\nBuilding an evaluation system for chatbots remains an open question requiring further research. More details are provided in the evaluation section.\r\n\r\n<img src=\"/images/blog/vicuna/chart.svg\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto; width: 60%\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 1. Relative Response Quality Assessed by GPT-4*</p>\r\n\r\n## Online Demo\r\nTry the Vicuna-13B demo [here](https://chat.lmsys.org)!\r\n\r\n<!-- Add a video that automatically play -->\r\n<div>\r\n  <a href=\"https://chat.lmsys.org\"  style=\"display: flex; justify-content: center; margin-top: 1em; margin-bottom: 1em;\">\r\n  <video autoplay muted loop src=\"/images/blog/vicuna/demo-narrow.mp4\" type=\"video/mp4\" style=\"width: 70%;\" id=\"demo\">\r\n  </video>\r\n  </a>\r\n</div>\r\n\r\n## Overview\r\nThe rapid advancement of large language models (LLMs) has revolutionized chatbot systems, resulting in unprecedented levels of intelligence as seen in OpenAI's ChatGPT. However, despite its impressive performance, the training and architecture details of ChatGPT remain unclear, hindering research and open-source innovation in this field. Inspired by the Meta LLaMA and Stanford Alpaca project, we introduce Vicuna-13B, an open-source chatbot backed by an enhanced dataset and an easy-to-use, scalable infrastructure. By fine-tuning a LLaMA base model on user-shared conversations collected from ShareGPT.com, Vicuna-13B has demonstrated competitive performance compared to other open-source models like Stanford Alpaca. This blog post provides a preliminary evaluation of Vicuna-13B's performance and describes its training and serving infrastructure. We also invite the community to interact with our online demo to test the capabilities of this chatbot.\r\n\r\n<img src=\"/images/blog/vicuna/overview.png\" style=\"display:block; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto; width: 70%\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 2. Workflow Overview</p>\r\n\r\nFigure 2 provides an overview of our work. To begin, we collected around 70K conversations from ShareGPT.com, a website where users can share their ChatGPT conversations. Next, we enhanced the training scripts provided by Alpaca to better handle multi-round conversations and long sequences. The training was done with PyTorch FSDP on 8 A100 GPUs in one day. For serving the demo, we implemented a lightweight distributed serving system. We conducted a preliminary evaluation of the model quality by creating a set of 80 diverse questions and utilizing GPT-4 to judge the model outputs. To compare two different models, we combine the outputs from each model into a single prompt for each question. The prompts are then sent to GPT-4, which assesses which model provides better responses. A detailed comparison of LLaMA, Alpaca, ChatGPT, and Vicuna is shown in Table 1 below.\r\n\r\n\r\n<p style=\"color:gray; text-align: center;\">Table 1. Comparison between several notable models</p>\r\n\r\n<table class=\"tg\" style=\"display: flex;justify-content: center;\">\r\n<tbody>\r\n  <tr>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Model Name</span></td>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">LLaMA</span></td>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Alpaca</span></td>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Vicuna</span></td>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Bard/ChatGPT</span></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Dataset</td>\r\n    <td class=\"tg-body\">Publicly available datasets<br>(1T token)</td>\r\n    <td class=\"tg-body\">Self-instruct from davinci-003 API<br>(52K samples)</td>\r\n    <td class=\"tg-body\">User-shared conversations<br>(70K samples)</td>\r\n    <td class=\"tg-body\">N/A</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Training code</td>\r\n    <td class=\"tg-body\">N/A</td>\r\n    <td class=\"tg-body\">Available</td>\r\n    <td class=\"tg-body\">Available</td>\r\n    <td class=\"tg-body\">N/A</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Evaluation metrics</td>\r\n    <td class=\"tg-body\">Academic benchmark</td>\r\n    <td class=\"tg-body\">Author evaluation</td>\r\n    <td class=\"tg-body\">GPT-4 assessment</td>\r\n    <td class=\"tg-body\">Mixed</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Training cost<br>(7B)</td>\r\n    <td class=\"tg-body\">82K GPU-hours</td>\r\n    <td class=\"tg-body\">$500 (data) + $100 (training)</td>\r\n    <td class=\"tg-body\">$140 (training)</td>\r\n    <td class=\"tg-body\">N/A</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Training cost<br>(13B)</td>\r\n    <td class=\"tg-body\">135K GPU-hours</td>\r\n    <td class=\"tg-body\">N/A</td>\r\n    <td class=\"tg-body\">$300 (training)</td>\r\n    <td class=\"tg-body\">N/A</td>\r\n  </tr>\r\n</tbody>\r\n</table>\r\n\r\n## Training\r\nVicuna is created by fine-tuning a LLaMA base model using approximately 70K user-shared conversations gathered from ShareGPT.com with public APIs. To ensure data quality, we convert the HTML back to markdown and filter out some inappropriate or low-quality samples. Additionally, we divide lengthy conversations into smaller segments that fit the model's maximum context length.\r\n\r\nOur training recipe builds on top of [Stanford’s alpaca](https://crfm.stanford.edu/2023/03/13/alpaca.html) with the following improvements.\r\n- **Memory Optimizations:** To enable Vicuna's understanding of long context, we expand the max context length from 512 in alpaca to 2048, which substantially increases GPU memory requirements. We tackle the memory pressure by utilizing [gradient checkpointing](https://arxiv.org/abs/1604.06174) and [flash attention](https://arxiv.org/abs/2205.14135).\r\n- **Multi-round conversations:** We adjust the training loss to account for multi-round conversations and compute the fine-tuning loss solely on the chatbot's output.\r\n- **Cost Reduction via Spot Instance:** The 40x larger dataset and 4x sequence length for training poses a considerable challenge in training expenses. We employ [SkyPilot](https://github.com/skypilot-org/skypilot) [managed spot](https://skypilot.readthedocs.io/en/latest/examples/spot-jobs.html) to reduce the cost by leveraging the cheaper spot instances with auto-recovery for preemptions and auto zone switch. This solution slashes costs for training the 7B model from $500 to around $140 and the 13B model from around $1K to $300.\r\n\r\n\r\n## Serving\r\nWe build a serving system that is capable of serving multiple models with distributed workers. It supports flexible plug-in of GPU workers from both on-premise clusters and the cloud. By utilizing a fault-tolerant controller and managed spot feature in SkyPilot, this serving system can work well with cheaper spot instances from multiple clouds to reduce the serving costs. It is currently a lightweight implementation and we are working on integrating more of our latest [research](https://arxiv.org/abs/2302.11665) into it.\r\n\r\n## How To Evaluate a Chatbot?\r\nEvaluating AI chatbots is a challenging task, as it requires examining language understanding, reasoning, and context awareness. With AI chatbots becoming more advanced, current open benchmarks may no longer suffice. For instance, the evaluation dataset used in Stanford’s Alpaca, [self-instruct](https://github.com/yizhongw/self-instruct/tree/main/human_eval), can be effectively answered by SOTA chatbots, making it difficult for humans to discern differences in performance. More limitations include training/test data contamination and the potentially high cost of creating new benchmarks. To tackle these issues, we propose an evaluation framework based on GPT-4 to automate chatbot performance assessment.\r\n\r\nFirst, we devised eight question categories, such as Fermi problems, roleplay scenarios, and coding/math tasks, to test various aspects of a chatbot's performance. Through careful prompt engineering, GPT-4 is able to generate diverse, challenging questions that baseline models struggle with. We select ten questions per category and collect answers from five chatbots: LLaMA, Alpaca, ChatGPT, Bard, and Vicuna. We then ask GPT-4 to rate the quality of their answers based on helpfulness, relevance, accuracy, and detail. We discover that GPT-4 can produce not only relatively consistent scores but also detailed explanations on why such scores are given (detailed examples [link](https://lmsys.org/vicuna_eval/)). However, we also notice that GPT-4 is not very good at judging coding/math tasks.\r\n\r\n<img src=\"/images/blog/vicuna/response-compare.png\" style=\"display: flex; margin-top: auto; margin-left: auto; margin-right: auto; margin-bottom: auto; width: 50%;\"></img>\r\n<p style=\"color:gray; text-align: center;\">Figure 3. Response Comparison Assessed by GPT-4</p>\r\n\r\nFigure 3 displays the comparison results between all baselines and Vicuna. GPT-4 prefers Vicuna over state-of-the-art open-source models (LLaMA, Alpaca) in more than 90% of the questions, and it achieves competitive performance against proprietary models (ChatGPT, Bard). In 45% of the questions, GPT-4 rates Vicuna's response as better or equal to ChatGPT's.\r\nAs GPT-4 assigns a quantitative score to each response on a scale of 10, we calculate the total score for each (baseline, Vicuna) comparison pair by adding up the scores obtained by each model on 80 questions. As shown in Table 2, Vicuna’s total score is 92% of ChatGPT’s. Despite recent advancements, these chatbots still face limitations, such as struggling with basic math problems or having limited coding ability.\r\n\r\n<p style=\"color:gray; text-align: center;\">Table 2. Total Scores Assessed by GPT-4. </p>\r\n\r\n<table class=\"tg\" style=\"display: flex;justify-content: center;\">\r\n<tbody>\r\n  <tr>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Baseline</span></td>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Baseline Score</span></td>\r\n    <td class=\"tg-head\"><span style=\"font-weight:bold;\">Vicuna Score</span></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">LLaMA-13B</td>\r\n    <td class=\"tg-body\" style=\"text-align: right\">513.0</td>\r\n    <td class=\"tg-body\" style=\"text-align: right\"><span style=\"font-weight:bold;\">694.0</span></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Alpaca-13B</td>\r\n    <td class=\"tg-body\" style=\"text-align: right\">583.0</td>\r\n    <td class=\"tg-body\" style=\"text-align: right\"><span style=\"font-weight:bold;\">704.0</span></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">Bard</td>\r\n    <td class=\"tg-body\" style=\"text-align: right\"><span style=\"font-weight:bold;\">664.0</span></td>\r\n    <td class=\"tg-body\" style=\"text-align: right\">655.5</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-body\">ChatGPT</td>\r\n    <td class=\"tg-body\" style=\"text-align: right\"><span style=\"font-weight:bold;\">693.0</span></td>\r\n    <td class=\"tg-body\" style=\"text-align: right\">638.0</td>\r\n  </tr>\r\n</tbody>\r\n</table>\r\n<br>\r\n\r\nWhile this proposed evaluation framework demonstrates the potential for assessing chatbots, it is not yet a rigorous or mature approach, as large language models are prone to hallucinate. Developing a comprehensive, standardized evaluation system for chatbots remains an open question requiring further research.\r\n\r\n## Limitations\r\nWe have noticed that, similar to other large language models, Vicuna has certain limitations. For instance, it is not good at tasks involving reasoning or mathematics, and it may have limitations in accurately identifying itself or ensuring the factual accuracy of its outputs. Additionally, it has not been sufficiently optimized to guarantee safety or mitigate potential toxicity or bias. To address the safety concerns, we use the OpenAI [moderation](https://platform.openai.com/docs/guides/moderation/overview) API to filter out inappropriate user inputs in our online demo. Nonetheless, we anticipate that Vicuna can serve as an open starting point for future research to tackle these limitations.\r\n\r\n## Release\r\nIn our first release, we will share the training, serving, and evaluation code on a GitHub repo: [https://github.com/lm-sys/FastChat](https://github.com/lm-sys/FastChat).\r\nWe also released the Vicuna-13B model weights, please find the instructions [here](https://github.com/lm-sys/FastChat#vicuna-weights).\r\nThere is no plan to release the dataset.\r\nJoin our [Discord](https://discord.gg/HSWAKCrnFx) server and follow our [Twitter](https://twitter.com/lmsysorg) to get the latest updates.\r\n\r\n## License\r\nThe online demo is a research preview intended for non-commercial use only, subject to the model [License](https://github.com/facebookresearch/llama/blob/main/MODEL_CARD.md) of LLaMA, [Terms of Use](https://openai.com/policies/terms-of-use) of the data generated by OpenAI, and [Privacy Practices](https://chrome.google.com/webstore/detail/sharegpt-share-your-chatg/daiacboceoaocpibfodeljbdfacokfjb) of ShareGPT. Please contact us If you find any potential violation.\\\\\r\nThe code is released under the Apache License 2.0.\r\n\r\n## The Team\r\nThis is a joint effort with collaborators from multiple institutions, including UC Berkeley, CMU, Stanford, UC San Diego, and MBZUAI.\r\n\r\n**Students (alphabetical order):**\\\r\nWei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng, Siyuan Zhuang, Yonghao Zhuang\r\n\r\n**Advisors (alphabetical order):**\\\r\nJoseph E. Gonzalez, Ion Stoica, Eric P. Xing\r\n\r\n\r\n## Acknowledgment\r\nWe would like to thank Xinyang Geng, Hao Liu, and Eric Wallace from BAIR; Xuecheng Li, and Tianyi Zhang from Stanford Alpaca team for their insightful discussion and feedback; Qirong Ho from MBZUAI for providing support on the serving cluster. Please check out a blog post from BAIR about a concurrent effort on their chatbot, [Koala](https://bair.berkeley.edu/blog/2023/04/03/koala/).\r\n\r\n\r\n## Citation\r\n```\r\n@misc{vicuna2023,\r\n    title = {Vicuna: An Open-Source Chatbot Impressing GPT-4 with 90\\%* ChatGPT Quality},\r\n    url = {https://lmsys.org/blog/2023-03-30-vicuna/},\r\n    author = {Chiang, Wei-Lin and Li, Zhuohan and Lin, Zi and Sheng, Ying and Wu, Zhanghao and Zhang, Hao and Zheng, Lianmin and Zhuang, Siyuan and Zhuang, Yonghao and Gonzalez, Joseph E. and Stoica, Ion and Xing, Eric P.},\r\n    month = {March},\r\n    year = {2023}\r\n}\r\n```\r\n","date":1680134400000}]},"__N_SSG":true}